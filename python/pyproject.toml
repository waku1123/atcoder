[project]
name = "python"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = []

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "ruff>=0.14.2",
]

[tool.ruff]
target-version = "py313"
# 1行の文字数
line-length = 150
# インデントの空白文字数
indent-width = 4
# .gitignoreを尊重する
respect-gitignore = true
# リンティングやフォーマッティングの対象から除外するファイルパターン
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  "pytype",
  "ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  "migration/**",
]
# 自動修正する(できるもののみ)
fix = true
# プレビューモードは無効にする
preview = false


[tool.ruff.lint]
# 適用するルール
select = ["ALL"]
# 適用しないルール
ignore = [
  "A003",   # flake8-builtins(builtin-attribute-shadowing)
  "ARG",    # flake8-unused-arguments
  "B",      # flake8-bugbear
  "BLE",    # flake8-blind-except
  "C4",     # flake8-comprehensions
  "COM",    # flake8-commas
  "CPY",    # flake8-copyright
  "D",      # pydocstyle
  "DJ",     # flake8-django
  "DTZ",    # flake8-datetimez
  "E501",   # pydocstyle(line-too-long)
  "EM",     # flake8-errmsg
  "ERA",    # eradicate
  "EXE",    # flake8-executable
  "FA",     # flake8-future-annotation
  "FBT",    # flake8-boolean-trap
  "FIX",    # flake8-fixme
  "FLY",    # flynt
  "G",      # flake8-logging-format
  "I001",   # isort(Import block is un-sorted or un-formatted)
  "ISC",    # flake8-implicit-str-concat
  "N815",   # pep8-naming(mixed-case-variable-in-class-scope)
  "PTH",    # flake8-use-pathlib
  "RET504", # flake8-return(Unnecessary assignment to `response` before `return` statement)
  "RUF001", # Ruff-specific rules(ambigous-unicode-character-string)
  "S",      # flake8-bandit
  "T10",    # flake8-debugger
  "T20",    # flake8-print
  "TD",     # flake8-todo
  "TID",    # flake8-tidy-imports
  "TRY",    # tryceratops
  "YTT",    # flake8-2020
]
# リンティング対象から除外するファイルパターン
exclude = ["tests/**"]
# 安定しないルールは適用しない
preview = false


[tool.ruff.lint.isort]
# importのソートを大文字/小文字を考慮する
case-sensitive = false
# インポート文を1行にまとめる
combine-as-imports = false
# インポート後の空行数
lines-after-imports = 2
# 末尾のカンマで改行する
split-on-trailing-comma = true


[tool.ruff.format]
# インデントは空白
indent-style = "space"
# 改行コードはLFで統一する
line-ending = "lf"
# 安定していないルールは適用しない
preview = true
# docstring内のコードスニペットもフーマットする
docstring-code-format = true
# ダブルクォートで統一する
quote-style = "double"
# docstring内のコードスニペットの文字数上限
docstring-code-line-length = 150
# 末尾のカンマは無視しない
skip-magic-trailing-comma = false
# フォーマット対象から除外するファイルパターン
exclude = ["migration/**"]
